已知数组A[0…N-1]乱序着前N个正整数，现统计后缀数组A[i+1…N-1]中小于元素A[i]的
数目，并存放在数组C[i]中。如给定数组A={4,6,2,5,3,1}，得到数组C={3,4,1,2,1,0}。
 问：给定数组C={3,4,1,2,1,0}，如何恢复数组A？
我们称A为原数组，C为Cantor数组。

给定顺序数组B={1,2,3…N-1,N}，从0开始数
考察Cantor数组的首位C[0]：小于A[0]的个数为C[0]，则A[0]为B[C[0]]
在序列数组B中删除B[C[0]]，仍然满足以上性质。


康托展开
康托展开就是一种特殊的哈希函数,它的使用范围是对于n个数的排列进行状态的压缩和存储,
例如要对9的全排列进行判重.没有必要开一个10^9的数组,同时内存也不允许开到那么大的数组.
对此，有人提出了优化,即对于一个n的排列数,没有必要开到10^n,因为在一个排列中每个数只出现一次,所以只要前n-1位确定了,前N位就确定了.
但是以上的想法仍不可行,因为N可以很大,例如15,所以便引入了康托展开:
只需要确定这个排列在总的排列情况中是第几小的就可以了.
例如:我想知道321是{1,2,3}的排列中第几个大的数可以这样考虑
第一位是3，当第一位的数小于3时，那排列数小于321 如 123 213
小于3的数有1，2 所以有2*2!个 再看小于第二位2的 小于2的数只有一个就是1 所以有1*1!=1
所以小于321的{1,2,3}排列数有2*2!+1*1!=5个所以321是第6个大的数。 2*2!+1*1!是康托展开.