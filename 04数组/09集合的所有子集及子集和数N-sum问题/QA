子集和数问题 N-Sum
已知数组A[0…N-1]，给定某数值sum，找出数组中的若干个数，使得这些数的和为sum。
布尔向量x[0…N-1]
x[i]=0表示不取A[i]，x[i]=1表示取A[i]
1，假定数组中的元素都大于0：A[i]＞0
分析方法
 直接递归法(枚举)

 分支限界
 前提：假设数组A[0…N-1]的元素都大于0，考察向量x[0…N-1]，假定已经确定了前i个值，
 现在要判定第i+1个值x[i]为0还是1。
假定由x[0…i-1]确定的A[0…i-1]的和为has； A[i,i+1,…N-1]的和为residue(简记为r)；
has+a[i]≤sum并且has+r≥sum：x[i]可以为1；
has+(r-a[i])>= sum：x[i]可以为0；

 存在负数的处理办法
 枚举法暴力求解肯定能得到正确的解
 现在考虑如何对负数进行分支限界？
 可对整个数组A[0…N-1]负正排序，使得负数都在前面，正数都在后面，使用剩余正数的和作为分支限界的约束：
 如果A[i]为负数：如果全部正数都算上还不够，就不能选A[i]；
 如果递归进入了正数范围，按照数组是全正数的情况正常处理；


以上的问题其实很类似0-1背包问题，及凑硬币问题，这些在后面的动态规划我们会再研究