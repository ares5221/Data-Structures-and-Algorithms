最大间隔
给定整数数组A[0…N-1]，求这N个数排序后最大间隔。如：1,7,14,9,4,13的最大间隔为
4。
排序后：1,4,7,9,13,14，最大间隔是13-9=4
显然，对原数组排序，然后求后项减前项的最大值，即为解。这样复杂度一般为o(NlogN)

分析：
假定N个数的最大最小值为max, min ，则N个数之间的间隔有N-1个，
最小值是（max - min)/(N-1)
若N个数完全均匀分布，则间隔全是（max - min)/(N-1)，且最小
若分布不均匀，则最大间隔必然大于（max - min)/(N-1)

思路：
将N个数用间隔（max - min)/(N-1)分成N-1个区间，则落在同一区间的数
不可能有最大间距，只需要统计后一个区间的最小值与前一区间最大值即可
若没有任何数落在某区间，则该区间无效，不参与统计，桶排序与Hash映射的思想
该算法时间复杂度为线性o(N)

这样划分后，每个数据x对应的桶的编号（0-n-1）就是；简单当做n处理，max - min = n * width
index = (x - min) / width = (x - min) / (max - min) * n
这样，当我们取n=Array.length时，相应的每个数据的存放的桶的编号也就确定了：
index = (x - min) / (max - min) * Array.length
如果我们取n= (max-min)/Array.length 时，就有：
index = (x - min) / (max - min) * (max-min) / Array.length = (x - min) / Array.length;